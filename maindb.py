# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'maindb.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from updatedb import *
from PyQt5.QtWidgets import QMessageBox


class Ui_mainpage(object):
    def setupUi(self, mainpage):
        mainpage.setObjectName("mainpage")
        mainpage.resize(639, 846)
        self.centralwidget = QtWidgets.QWidget(mainpage)
        self.centralwidget.setObjectName("centralwidget")
        self.insbutton = QtWidgets.QPushButton(self.centralwidget)
        self.insbutton.setGeometry(QtCore.QRect(270, 330, 201, 61))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.insbutton.setFont(font)
        self.insbutton.setObjectName("insbutton")

        self.insbutton.clicked.connect(self.add)
        # self.show()
    
        self.nametext = QtWidgets.QLineEdit(self.centralwidget)
        self.nametext.setGeometry(QtCore.QRect(240, 80, 371, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.nametext.setFont(font)
        self.nametext.setObjectName("nametext")
        self.name = QtWidgets.QLabel(self.centralwidget)
        self.name.setGeometry(QtCore.QRect(100, 90, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.name.setFont(font)
        self.name.setObjectName("name")
        self.class_2 = QtWidgets.QLabel(self.centralwidget)
        self.class_2.setGeometry(QtCore.QRect(100, 260, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.class_2.setFont(font)
        self.class_2.setObjectName("class_2")
        self.roll = QtWidgets.QLabel(self.centralwidget)
        self.roll.setGeometry(QtCore.QRect(100, 180, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.roll.setFont(font)
        self.roll.setObjectName("roll")
        self.classtext = QtWidgets.QLineEdit(self.centralwidget)
        self.classtext.setGeometry(QtCore.QRect(240, 260, 371, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.classtext.setFont(font)
        self.classtext.setObjectName("classtext")
        self.rolltext = QtWidgets.QLineEdit(self.centralwidget)
        self.rolltext.setGeometry(QtCore.QRect(240, 170, 371, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.rolltext.setFont(font)
        self.rolltext.setObjectName("rolltext")
        self.delbutton = QtWidgets.QPushButton(self.centralwidget)
        self.delbutton.setGeometry(QtCore.QRect(380, 630, 201, 61))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.delbutton.setFont(font)
        self.delbutton.setObjectName("delbutton")

        self.delbutton.clicked.connect(self.dlt)

        self.updbutton = QtWidgets.QPushButton(self.centralwidget)
        self.updbutton.setGeometry(QtCore.QRect(100, 630, 201, 61))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.updbutton.setFont(font)
        self.updbutton.setObjectName("updbutton")

        self.updbutton.clicked.connect(self.upd)
        self.updbutton.clicked.connect(mainpage.close)

        self.datatable = QtWidgets.QTableWidget(self.centralwidget)
        self.datatable.setGeometry(QtCore.QRect(170, 410, 381, 192))
        self.datatable.setObjectName("datatable")
        self.datatable.setColumnCount(3)
        self.datatable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.datatable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.datatable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.datatable.setHorizontalHeaderItem(2, item)
        mainpage.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(mainpage)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 639, 27))
        self.menubar.setObjectName("menubar")
        mainpage.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(mainpage)
        self.statusbar.setObjectName("statusbar")
        mainpage.setStatusBar(self.statusbar)

        self.show()

        self.retranslateUi(mainpage)
        QtCore.QMetaObject.connectSlotsByName(mainpage)

    def retranslateUi(self, mainpage):
        _translate = QtCore.QCoreApplication.translate
        mainpage.setWindowTitle(_translate("mainpage", "MainWindow"))
        self.insbutton.setText(_translate("mainpage", "Insert Value"))
        self.name.setText(_translate("mainpage", "Name:"))
        self.class_2.setText(_translate("mainpage", "Class:"))
        self.roll.setText(_translate("mainpage", "Roll:"))
        self.delbutton.setText(_translate("mainpage", "Delete"))
        self.updbutton.setText(_translate("mainpage", "Update"))
        item = self.datatable.horizontalHeaderItem(0)
        item.setText(_translate("mainpage", "Name"))
        item = self.datatable.horizontalHeaderItem(1)
        item.setText(_translate("mainpage", "Roll"))
        item = self.datatable.horizontalHeaderItem(2)
        item.setText(_translate("mainpage", "Class"))

    def add(self):
        n=self.nametext.text()
        r=self.rolltext.text()
        c=self.classtext.text()
        con=sqlite3.connect("project2.db")
        cur=con.cursor()
        cur1=con.cursor()
        sql="select count(Roll) from std_info where Roll=?"
        cur.execute(sql,(r,))
        res=cur.fetchall()
        count=res[0][0]
        if count>0:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Insert")
            msg.setInformativeText("Already Inserted") 
            msg.setWindowTitle("Pathfinder")
            msg.show()
            msg.exec_()
        else:

            insitem="insert into std_info values(?,?,?)" 
            val=(n,r,c)
            cur.execute(insitem,val)
            if  cur1.rowcount==1:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("Insert")
                msg.setInformativeText("Already Inserted") 
                msg.setWindowTitle("Pathfinder")
                msg.show()
                msg.exec_()
            else:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("Insert")
                msg.setInformativeText("Inserted sucessfull") 
                msg.setWindowTitle("Pathfinder")
                msg.show()
                msg.exec_()
            con.commit()                 
            rc=self.datatable.rowCount()
            self.datatable.insertRow(rc)       
            self.datatable.setItem(rc,0,QtWidgets.QTableWidgetItem(n))
            self.datatable.setItem(rc,1,QtWidgets.QTableWidgetItem(r))
            self.datatable.setItem(rc,2,QtWidgets.QTableWidgetItem(c))
            self.show()
        # pass
    
    def dlt(self):
        r=self.rolltext.text()
        con=sqlite3.connect("project2.db")
        cur=con.cursor()
        sql="delete from std_info where Roll=?" 
        val=(r,)
        cur.execute(sql,val)
        con.commit()
        i=self.datatable.currentIndex()
        rw=i.row()
        self.datatable.removeRow(rw)
        print(" Value Deleted")
        # pass

    def show(self):
        con = sqlite3.connect("project2.db")
        cur = con.cursor()
        sql=  "Select * from std_info"
        cur.execute(sql)
        res = cur.fetchall()
        self.datatable.setRowCount(0)
        for i in res:
            n = i[0]
            r = i[1]
            c = i[2]
            rc = self.datatable.rowCount()
            self.datatable.insertRow(rc)
            self.datatable.setItem(rc,0,QtWidgets.QTableWidgetItem(n))
            self.datatable.setItem(rc,1,QtWidgets.QTableWidgetItem(str(r)))
            self.datatable.setItem(rc,2,QtWidgets.QTableWidgetItem(c))
        # pass

    def upd(self):
        i = self.datatable.currentIndex()
        rw = i.row()
        con = sqlite3.connect("project2.db")
        cur = con.cursor()
        q = "select * from std_info limit ?,1"
        cur.execute(q,(rw,))
        res = cur.fetchall()
        print(res)
        n = res[0][0]
        r = res[0][1]
        c = res[0][2]
        if rw == -1:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Select any row")
            msg.setWindowTitle("Warning")
            msg.show()
            msg.exec_()
        else:
            self.updatepage = QtWidgets.QMainWindow()
            self.ui = Ui_updatepage(n,r,c)
            self.ui.setupUi(self.updatepage)
            self.updatepage.show()
        # pass




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainpage = QtWidgets.QMainWindow()
    ui = Ui_mainpage()
    ui.setupUi(mainpage)
    mainpage.show()
    sys.exit(app.exec_())
